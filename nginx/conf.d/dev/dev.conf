server {
    listen 443 ssl;
    server_name dev.bluegajournal.com localhost;

    ssl_certificate /etc/letsencrypt/live/dev.bluegajournal.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dev.bluegajournal.com/privkey.pem;

    # SSL 設置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # 啟用詳細的錯誤日誌
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log combined;

    # 前端
    location / {
        proxy_pass http://172.20.0.4:5173;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # 開發環境的額外設置
        proxy_buffering off;
        proxy_read_timeout 3600;
        proxy_connect_timeout 3600;
        proxy_send_timeout 3600;

        # 添加 CORS 頭
        add_header 'Access-Control-Allow-Origin' '*';
        # 調試信息
        add_header X-Debug-Message "Proxying to frontend" always;
    }

    # API
    location /api/ {
        proxy_pass http://172.20.0.3:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 添加 CORS 頭
        add_header 'Access-Control-Allow-Origin' '*';
        # 調試信息
        add_header X-Debug-Message "Proxying to backend" always;
    }

    # 靜態文件
    location /static/ {
        alias /app/staticfiles/;
        expires 1h;
        access_log off;
        add_header Cache-Control "public, no-transform";
    }

    # 媒體文件
    location /media/ {
        alias /app/media/;
        expires 1h;
        access_log off;
        add_header Cache-Control "public, no-transform";
    }

    # 健康檢查
    location /health_check {
        access_log off;
        return 200 'OK';
        add_header Content-Type text/plain;
    }
}

# HTTP 重定向到 HTTPS
server {
    listen 80;
    server_name dev.bluegajournal.com;
    return 301 https://$server_name:8443$request_uri;
}