# 設置臨時文件目錄
client_body_temp_path /var/cache/nginx/client_temp;
proxy_temp_path /var/cache/nginx/proxy_temp;
fastcgi_temp_path /var/cache/nginx/fastcgi_temp;
uwsgi_temp_path /var/cache/nginx/uwsgi_temp;
scgi_temp_path /var/cache/nginx/scgi_temp;

upstream backend {
    server 3.24.138.130:8000;
}

server {
    listen 80;
    server_name _;
    
    # 日誌配置
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log debug;

    # 安全性標頭
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "same-origin" always;

    # 前端應用
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        index index.html;
        
        # 調試信息
        add_header X-Debug-Path $document_root always;
        add_header X-Debug-Uri $uri always;
        
        # 禁用緩存（調試時使用）
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        add_header Pragma "no-cache" always;
        expires 0;
    }

     # 明確配置 assets 目錄
    location /assets/ {
        alias /usr/share/nginx/html/assets/;  # 使用 alias 而不是 root
        expires 30d;
        add_header Cache-Control "public, no-transform";
        
        # 調試信息
        add_header X-Debug-Path $request_filename always;
        add_header X-Debug-Uri $uri always;
        
        # 允許跨域
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "*" always;
        
        # 確保文件存在
        try_files $uri =404;
    }

    # API 請求
    location /api/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 增加緩衝區大小
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # 增加超時設置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # CORS 設置
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, X-CSRF-Token' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range' always;
        
        # 安全性標頭
        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Cross-Origin-Opener-Policy "same-origin" always;
        add_header Cross-Origin-Resource-Policy "same-site" always;
        
        # 處理 OPTIONS 請求
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, X-CSRF-Token' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # 靜態文件
    location /static/ {
        alias /usr/share/nginx/static/;
        access_log off;
        expires 30d;
        add_header Cache-Control "public, no-transform" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # 媒體文件
    location /media/ {
        alias /usr/share/nginx/media/;
        access_log off;
        expires 30d;
        add_header Cache-Control "public, no-transform" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # 健康檢查
    location = /health_check {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'healthy\n';
    }

    # 錯誤處理
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # 添加一個用於調試的路徑
    location = /debug {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'Document Root: $document_root\nURI: $uri\nRequest: $request\n';
    }
}