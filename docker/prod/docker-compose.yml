version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: bluega_nginx_prod
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ../../nginx/conf.d/prod:/etc/nginx/conf.d
      - ../../certbot/conf:/etc/letsencrypt
      - ../../certbot/www:/var/www/certbot
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ../../nginx/log:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - bluega_network_prod

  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile.prod
    container_name: bluega_frontend_prod
    volumes:
      - ../../frontend:/app
      - /app/node_modules
    networks:
      - bluega_network_prod

  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile.prod
    container_name: bluega_backend_prod
    volumes:
      - ../../backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.prod
      - DATABASE_URL=postgres://postgres:postgres@db:5432/bluega_journal_prod
    depends_on:
      - db
      - redis
    expose:
      - "8000"
    networks:
      - bluega_network_prod

  db:
    image: postgres:15-alpine
    container_name: bluega_db_prod
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=bluega_journal_prod
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - bluega_network_prod

  redis:
    image: redis:alpine
    container_name: bluega_redis_prod
    networks:
      - bluega_network_prod

volumes:
  postgres_data_prod:
  static_volume:
  media_volume:

networks:
  bluega_network_prod:
    driver: bridge